name: build-and-deploy-book

# Trigger the workflow on push to main branch and PRs
on: [push, pull_request]

# This job installs dependencies, builds the book, and deploys the html
jobs:
  build-and-deploy-book:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v2
    - name: üì¶ Cache Conda
      uses: actions/cache@v2
      post-if: 'always()'
      env:
        # Increase this value to reset cache if etc/example-environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
          hashFiles('environment.yaml') }}
    - uses: conda-incubator/setup-miniconda@v2
      name: üêç Set up Conda environment
      with:
        environment-file: environment.yaml
        activate-environment: L96M2lines # Defined in environment.yaml
        channels: conda-forge
        mamba-version: '*'
        channel-priority: strict
        auto-update-conda: false
        python-version: ${{ matrix.python-version }}
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
    - name: üëÄ Check Conda environment
      shell: bash -l {0}
      run: |
          conda info
          conda list
    - name: üì¶ Cache Notebooks
      uses: actions/cache@v2
      with:
        path: _notebook_cache
        key: notebook_cache-${{hashFiles('notebooks/*.ipynb', 'notebooks/*.py') }}
        restore-keys: |
            notebook_cache-${{hashFiles('notebooks/*.ipynb', 'notebooks/*.py') }}
            notebook_cache-
    - name: üìñ Build the book
      shell: bash -l {0}
      run:  |
        mkdir -p _notebook_cache
        jupyter-book build .
    - name: üöÄ Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: _build/html
