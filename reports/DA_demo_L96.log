Traceback (most recent call last):
  File "/usr/share/miniconda/envs/L96M2lines/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/envs/L96M2lines/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/envs/L96M2lines/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/envs/L96M2lines/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/envs/L96M2lines/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/envs/L96M2lines/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/envs/L96M2lines/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/envs/L96M2lines/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import importlib

import DA_methods

importlib.reload(DA_methods)

# load pre-calculated climatological background covariance matrix from a long simulation
B_clim1 = np.load("B_clim_L96s.npy")
B_loc, W_clim = cov_loc(B_clim1, loc=config["B_loc"])

B_clim2 = np.load("B_clim_L96.npy")
B_corr1 = np.zeros(B_clim1.shape)
B_corr2 = np.zeros(B_clim2.shape)
for i in range(B_clim1.shape[0]):
    for j in range(B_clim1.shape[1]):
        B_corr1[i, j] = B_clim1[i, j] / np.sqrt(B_clim1[i, i] * B_clim1[j, j])
        B_corr2[i, j] = B_clim2[i, j] / np.sqrt(B_clim2[i, i] * B_clim2[j, j])

plt.figure(figsize=(16, 6))
plt.subplot(121)
plt.contourf(B_corr1, cmap="bwr", extend="both", levels=np.linspace(-0.95, 0.95, 20))
plt.colorbar()
plt.title("Background correlation matrix 1-scale L96")
plt.subplot(122)
plt.contourf(B_corr2, cmap="bwr", extend="both", levels=np.linspace(-0.95, 0.95, 20))
plt.colorbar()
plt.title("Background correlation matrix 2-scale L96")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
Input [0;32mIn [4][0m, in [0;36m<cell line: 8>[0;34m()[0m
[1;32m      5[0m importlib[38;5;241m.[39mreload(DA_methods)
[1;32m      7[0m [38;5;66;03m# load pre-calculated climatological background covariance matrix from a long simulation[39;00m
[0;32m----> 8[0m B_clim1 [38;5;241m=[39m [43mnp[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mB_clim_L96s.npy[39;49m[38;5;124;43m"[39;49m[43m)[49m
[1;32m      9[0m B_loc, W_clim [38;5;241m=[39m cov_loc(B_clim1, loc[38;5;241m=[39mconfig[[38;5;124m"[39m[38;5;124mB_loc[39m[38;5;124m"[39m])
[1;32m     11[0m B_clim2 [38;5;241m=[39m np[38;5;241m.[39mload([38;5;124m"[39m[38;5;124mB_clim_L96.npy[39m[38;5;124m"[39m)

File [0;32m/usr/share/miniconda/envs/L96M2lines/lib/python3.9/site-packages/numpy/lib/npyio.py:417[0m, in [0;36mload[0;34m(file, mmap_mode, allow_pickle, fix_imports, encoding)[0m
[1;32m    415[0m     own_fid [38;5;241m=[39m [38;5;28;01mFalse[39;00m
[1;32m    416[0m [38;5;28;01melse[39;00m:
[0;32m--> 417[0m     fid [38;5;241m=[39m stack[38;5;241m.[39menter_context([38;5;28;43mopen[39;49m[43m([49m[43mos_fspath[49m[43m([49m[43mfile[49m[43m)[49m[43m,[49m[43m [49m[38;5;124;43m"[39;49m[38;5;124;43mrb[39;49m[38;5;124;43m"[39;49m[43m)[49m)
[1;32m    418[0m     own_fid [38;5;241m=[39m [38;5;28;01mTrue[39;00m
[1;32m    420[0m [38;5;66;03m# Code to distinguish from NumPy binary files and pickles.[39;00m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: 'B_clim_L96s.npy'
FileNotFoundError: [Errno 2] No such file or directory: 'B_clim_L96s.npy'

